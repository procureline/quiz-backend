{"version":3,"sources":["webpack:///./node_modules/ngx-wig/ngx-wig.umd.js","webpack:///./src/app/dashboard/dahboardpage.component.css","webpack:///./src/app/dashboard/dahboardpage.component.html","webpack:///./src/app/dashboard/dahboardpage.component.ts","webpack:///./src/app/dashboard/dashboard-routing.module.ts","webpack:///./src/app/dashboard/dashboard.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA,CAAC,KAA4D,oBAAoB,mBAAO,CAAC,iEAAe,GAAG,mBAAO,CAAC,uEAAiB,GAAG,mBAAO,CAAC,oEAAgB;AAC/J,CAAC,SAC0E;AAC3E,CAAC,8CAA8C;;AAE/C;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,oBAAoB,iFAAiF;AACrG,oBAAoB,6EAA6E;AACjG,mBAAmB,qDAAqD;AACxE,qBAAqB,2DAA2D;AAChF,mBAAmB,2DAA2D;AAC9E,wBAAwB;AACxB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,6BAA6B;AAC1D,wCAAwC;AACxC;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,oBAAoB,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE,yDAAyD,EAAE,8BAA8B,EAAE;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE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","file":"dashboard-dashboard-module.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/forms')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/forms'], factory) :\n\t(factory((global['ngx-wig'] = {}),global.core,global.common,global.forms));\n}(this, (function (exports,core,common,forms) { 'use strict';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NgxWigToolbarService = (function () {\n    function NgxWigToolbarService() {\n        this._buttonLibrary = {\n            list1: { title: 'Unordered List', command: 'insertunorderedlist', styleClass: 'list-ul' },\n            list2: { title: 'Ordered List', command: 'insertorderedlist', styleClass: 'list-ol' },\n            bold: { title: 'Bold', command: 'bold', styleClass: 'bold' },\n            italic: { title: 'Italic', command: 'italic', styleClass: 'italic' },\n            link: { title: 'Link', command: 'createlink', styleClass: 'link' },\n            underline: { title: 'Underline', command: 'underline', styleClass: 'format-underlined' }\n        };\n        this._defaultButtonsList = ['list1', 'list2', 'bold', 'italic', 'link'];\n    }\n    /**\n     * @param {?} buttons\n     * @return {?}\n     */\n    NgxWigToolbarService.prototype.setButtons = /**\n     * @param {?} buttons\n     * @return {?}\n     */\n    function (buttons) {\n        // if(!angular.isArray(buttons)) {\n        //   throw 'Argument \"buttons\" should be an array';\n        // }\n        this._defaultButtonsList = buttons;\n    };\n    \n    /**\n     * @param {?} name\n     * @param {?} title\n     * @param {?} command\n     * @param {?} styleClass\n     * @return {?}\n     */\n    NgxWigToolbarService.prototype.addStandardButton = /**\n     * @param {?} name\n     * @param {?} title\n     * @param {?} command\n     * @param {?} styleClass\n     * @return {?}\n     */\n    function (name, title, command, styleClass) {\n        if (!name || !title || !command) {\n            throw 'Arguments \"name\", \"title\" and \"command\" are required';\n        }\n        styleClass = styleClass || '';\n        this._buttonLibrary[name] = { title: title, command: command, styleClass: styleClass };\n        this._defaultButtonsList.push(name);\n    };\n    /**\n     * @param {?} name\n     * @param {?} pluginName\n     * @return {?}\n     */\n    NgxWigToolbarService.prototype.addCustomButton = /**\n     * @param {?} name\n     * @param {?} pluginName\n     * @return {?}\n     */\n    function (name, pluginName) {\n        if (!name || !pluginName) {\n            throw 'Arguments \"name\" and \"pluginName\" are required';\n        }\n        this._buttonLibrary[name] = { pluginName: pluginName, isComplex: true };\n        this._defaultButtonsList.push(name);\n    };\n    /**\n     * @param {?=} buttonsList\n     * @return {?}\n     */\n    NgxWigToolbarService.prototype.getToolbarButtons = /**\n     * @param {?=} buttonsList\n     * @return {?}\n     */\n    function (buttonsList) {\n        var _this = this;\n        var /** @type {?} */ buttons = this._defaultButtonsList;\n        var /** @type {?} */ toolbarButtons = [];\n        if (typeof buttonsList !== 'undefined') {\n            buttons = string2array(buttonsList);\n        }\n        buttons.forEach(function (buttonKey) {\n            if (!buttonKey) {\n                return;\n            }\n            if (!_this._buttonLibrary[buttonKey]) {\n                throw 'There is no \"' + buttonKey + '\" in your library. Possible variants: ' + Object.keys(_this._buttonLibrary);\n            }\n            var /** @type {?} */ button = Object.assign({}, _this._buttonLibrary[buttonKey]);\n            // button.isActive = () => {return !!this.command && document.queryCommandState(this.command);}\n            toolbarButtons.push(button);\n        });\n        return toolbarButtons;\n    };\n    return NgxWigToolbarService;\n}());\n/**\n * @param {?} keysString\n * @return {?}\n */\nfunction string2array(keysString) {\n    return keysString.split(',').map(Function.prototype.call, String.prototype.trim);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NgxWigComponent = (function () {\n    function NgxWigComponent(_ngWigToolbarService) {\n        this._ngWigToolbarService = _ngWigToolbarService;\n        this.isSourceModeAllowed = false;\n        this.contentChange = new core.EventEmitter();\n        this.editMode = false;\n        this.toolbarButtons = [];\n        this.hasFocus = false;\n        this.propagateChange = function (_) { };\n        this.propagateTouched = function () { };\n        // hardcoded icons theme for now\n        this.iconsTheme = \"nw-button-mdi\";\n    }\n    /**\n     * @return {?}\n     */\n    NgxWigComponent.prototype.toggleEditMode = /**\n     * @return {?}\n     */\n    function () {\n        this.editMode = !this.editMode;\n    };\n    /**\n     * @param {?} command\n     * @param {?} options\n     * @return {?}\n     */\n    NgxWigComponent.prototype.execCommand = /**\n     * @param {?} command\n     * @param {?} options\n     * @return {?}\n     */\n    function (command, options) {\n        if (this.editMode) {\n            return false;\n        }\n        if (document.queryCommandSupported && !document.queryCommandSupported(command)) {\n            throw 'The command \"' + command + '\" is not supported';\n        }\n        if (command === 'createlink' || command === 'insertImage') {\n            options = window.prompt('Please enter the URL', 'http://');\n            if (!options) {\n                return;\n            }\n        }\n        this.container.focus();\n        // use insertHtml for `createlink` command to account for IE/Edge purposes, in case there is no selection\n        var /** @type {?} */ selection = document.getSelection().toString();\n        if (command === 'createlink' && selection === '') {\n            document.execCommand('insertHtml', false, '<a href=\"' + options + '\">' + options + '</a>');\n        }\n        else {\n            document.execCommand(command, false, options);\n        }\n        this.onContentChange(this.container.innerHTML);\n    };\n    /**\n     * @return {?}\n     */\n    NgxWigComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.toolbarButtons = this._ngWigToolbarService.getToolbarButtons(this.buttons);\n        this.container = this.ngxWigEditable.nativeElement;\n        if (this.content) {\n            this.container.innerHTML = this.content;\n        }\n    };\n    /**\n     * @param {?} newContent\n     * @return {?}\n     */\n    NgxWigComponent.prototype.onContentChange = /**\n     * @param {?} newContent\n     * @return {?}\n     */\n    function (newContent) {\n        this.content = newContent;\n        this.contentChange.emit(this.content);\n        this.propagateChange(this.content);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgxWigComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (this.container && changes['content']) {\n            // clear the previous content\n            this.container.innerHTML = '';\n            // add the new content\n            this.pasteHtmlAtCaret(changes['content'].currentValue);\n        }\n    };\n    /**\n     * @param {?} newContent\n     * @return {?}\n     */\n    NgxWigComponent.prototype.onTextareaChange = /**\n     * @param {?} newContent\n     * @return {?}\n     */\n    function (newContent) {\n        // model -> view\n        this.container.innerHTML = newContent;\n        this.onContentChange(newContent);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgxWigComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!value) {\n            value = '';\n        }\n        this.container.innerHTML = value;\n        this.onContentChange(value);\n    };\n    /**\n     * @return {?}\n     */\n    NgxWigComponent.prototype.shouldShowPlaceholder = /**\n     * @return {?}\n     */\n    function () {\n        return this.placeholder\n            && !this.container.innerText;\n    };\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    NgxWigComponent.prototype.pasteHtmlAtCaret = /**\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        var /** @type {?} */ sel, /** @type {?} */ range;\n        if (window.getSelection) {\n            sel = window.getSelection();\n            if (sel.getRangeAt && sel.rangeCount) {\n                range = sel.getRangeAt(0);\n                range.deleteContents();\n                // append the content in a temporary div\n                var /** @type {?} */ el = document.createElement('div');\n                el.innerHTML = html;\n                var /** @type {?} */ frag = document.createDocumentFragment(), /** @type {?} */ node = void 0, /** @type {?} */ lastNode = void 0;\n                while ((node = el.firstChild)) {\n                    lastNode = frag.appendChild(node);\n                }\n                range.insertNode(frag);\n                // Preserve the selection\n                if (lastNode) {\n                    range = range.cloneRange();\n                    range.setStartAfter(lastNode);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgxWigComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.propagateChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgxWigComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.propagateTouched = fn;\n    };\n    /**\n     * @return {?}\n     */\n    NgxWigComponent.prototype.onBlur = /**\n     * @return {?}\n     */\n    function () {\n        this.hasFocus = false;\n        this.propagateTouched();\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NgxWigComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    NgxWigComponent.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ngx-wig',\n                    template: \"<div class=\\\"ng-wig\\\"> <ul *ngIf=\\\"toolbarButtons.length\\\" class=\\\"nw-toolbar\\\"> <li *ngFor=\\\"let button of toolbarButtons\\\" class=\\\"nw-toolbar__item\\\"> <div *ngIf=\\\"!button.isComplex\\\"> <button type=\\\"button\\\" class=\\\"nw-button\\\" [ngClass]=\\\"[button.styleClass, iconsTheme]\\\" [title]=\\\"button.title\\\" (click)=\\\"execCommand(button.command)\\\" [disabled]=\\\"disabled\\\" tabindex=\\\"-1\\\"> {{ button.title }} </button> </div> </li><!-- --><li class=\\\"nw-toolbar__item\\\"> <button type=\\\"button\\\" class=\\\"nw-button nw-button--source\\\" title=\\\"Edit HTML\\\" [class.nw-button--active] = \\\"editMode\\\" [ngClass]=\\\"iconsTheme\\\" *ngIf=\\\"isSourceModeAllowed\\\" (click)=\\\"toggleEditMode()\\\" [disabled]=\\\"disabled\\\" tabindex=\\\"-1\\\"> Edit HTML </button> </li> </ul> <div class=\\\"nw-editor-container\\\" (click)=\\\"container.focus()\\\" [ngClass]=\\\"{ 'nw-editor-container--with-toolbar': toolbarButtons.length }\\\"> <div *ngIf=\\\"editMode\\\" class=\\\"nw-editor__src-container\\\"> <textarea [ngModel]=\\\"content\\\" (ngModelChange)=\\\"onTextareaChange($event)\\\" (blur)=\\\"propagateTouched()\\\" class=\\\"nw-editor__src\\\"> </textarea> </div> <div class=\\\"nw-editor\\\" [ngClass]=\\\"{ 'nw-disabled': disabled,'nw-invisible': editMode }\\\"> <div *ngIf=\\\"shouldShowPlaceholder()\\\" class=\\\"nw-editor__placeholder\\\" [innerText]=\\\"placeholder\\\"> </div> <div #ngWigEditable class=\\\"nw-editor__res\\\" [attr.contenteditable]=\\\"!disabled\\\" [ngClass]=\\\"{ disabled: disabled}\\\" (focus)=\\\"hasFocus = true\\\" (blur)=\\\"onBlur()\\\" (input)=\\\"onContentChange(ngWigEditable.innerHTML)\\\"><!-- --></div> </div> </div> </div> \",\n                    styles: [\"/* -------- NG-WIG -------- */ /** * *  RESET BOX MODEL * */ .ng-wig, [class^=\\\"nw-\\\"] { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; -o-box-sizing: border-box; -ms-box-sizing: border-box; box-sizing: border-box; } /** *   main wrapper for the editor * *  .ngx-wig * */ .ng-wig { display: block; padding: 0; margin: 0; } /** *  styling for toolbar and its items * *  .nw-toolbar *    &__item * */ .nw-toolbar { display: block; margin: 0; padding: 0; list-style: none; font-size: 12px; color: #6B7277; background: -webkit-linear-gradient(90deg, #ffffff 0%, #f9f9f9 100%); background: -moz-linear-gradient(90deg, #ffffff 0%, #f9f9f9 100%); background: linear-gradient(180deg, #ffffff 0%, #f9f9f9 100%); border: 1px solid #CCCCCC; border-radius: 3px 3px 0 0; } .nw-toolbar__item { display: inline-block; vertical-align: top; margin: 0; border-right: 1px solid #DEDEDE; } .nw-toolbar label { line-height: 30px; display: inline-block; padding: 0 6px 0 3px; } .nw-toolbar input[type=checkbox] { vertical-align: -3px; margin-right: -1px; } /** *  styling for the editor part: source code (original textarea) and resulting div * *  .nw-editor *    &__src *    &__res * */ .nw-editor { /* Default when height is not set */ display: block; position: relative; height: 300px; background: #fff; cursor: text; width: 100%; overflow-y: auto; } .nw-editor-container { border: 1px solid #CCCCCC; border-radius: 0 0 3px 3px; position: relative; } .nw-editor-container--with-toolbar { border-top: none; } .nw-editor__res { display: block; min-height: 100%; padding: 1px 8px; } .nw-editor__placeholder { display: block; position: absolute; padding: 1px 8px; color: lightgray; width: 100%; } .nw-editor__src, .nw-editor__res { width: 100%; outline: none; box-sizing: border-box; border: none; margin: 0; } .nw-editor__res.disabled { opacity: 0.5; } .nw-editor__src-container { position: absolute; left: 0; top: 0; right: 0; bottom: 0; } .nw-editor__src { height: 100%; resize: none; padding: 1px 8px; } .nw-editor--fixed .nw-editor { display: block; overflow-y: auto; } .nw-editor--fixed .nw-editor__res { padding: 1px 8px; display: block; } .nw-invisible { visibility: hidden; } .nw-editor--fixed .nw-invisible { display: none; } .nw-editor.nw-disabled { cursor: default; } /** *  styling for toolbar button, has two modifiers: active and type of icon for background * *  .nw-button *    &--active *    &--{button type} * */ .nw-button { -webkit-appearance: none; -moz-appearance: none; appearance: none; display: block; width: 30px; height: 30px; margin: 0; padding: 0; opacity: 0.5; line-height: 30px; background-color: transparent; background-position: center center; background-repeat: no-repeat; border: none; border-radius: 2px; font-size: 0; cursor: pointer; } .nw-button-fa:before { font-size: 12px; font-family: FontAwesome; } .nw-button-fa.bold:before { content: '\\\\f032'; } .nw-button-fa.italic:before { content: '\\\\f033'; } .nw-button-fa.list-ul:before { content: '\\\\f0ca'; } .nw-button-fa.list-ol:before { content: '\\\\f0cb'; } .nw-button-fa.link:before { content: '\\\\f0c1'; } .nw-button-fa.format-underlined:before { content: '\\\\f0cd'; } .nw-button-fa.font-color:before { content: '\\\\f031'; } .nw-button-fa.nw-button--source:before { content: '\\\\f040'; } .nw-button-fa.clear-styles:before { content: '\\\\f12d'; } .nw-button-mdi:before { vertical-align: middle; font-size: 14px; font-family: \\\"Material Design Icons\\\"; } .nw-button-mdi.bold:before { content: '\\\\f264'; } .nw-button-mdi.italic:before { content: '\\\\f277'; } .nw-button-mdi.list-ul:before { content: '\\\\f279'; } .nw-button-mdi.list-ol:before { content: '\\\\f27B'; } .nw-button-mdi.link:before { content: '\\\\f339'; } .nw-button-mdi.format-underlined:before { content: '\\\\f287'; } .nw-button-mdi.font-color:before { content: '\\\\f6D5'; } .nw-button-mdi.nw-button--source:before { content: '\\\\f3EB'; } .nw-button-mdi.clear-styles:before { content: '\\\\f1fE'; } .nw-button:focus { outline: none; } .nw-button:hover, .nw-button.nw-button--active { opacity: 1 } .nw-button--active { background-color: #EEEEEE; } .nw-button:disabled { cursor: default; } .nw-button:disabled:hover { opacity: 0.5; } /** *  styling & formatting of content inside contenteditable div * *  .nw-content * */ .nw-content { padding: 12px; margin: 0; font-family: sans-serif; font-size: 14px; line-height: 24px; } .nw-select { height: 30px; padding: 6px; color: #555; background-color: inherit; border: 0; } .nw-select:disabled { opacity: 0.5; } .nw-select:focus { outline: none; } .nw-button:focus { border-color: lightgray; border-style: solid; } [contenteditable]:empty:before { content: attr(placeholder); color: grey; display: inline-block; } \"],\n                    providers: [\n                        NgxWigToolbarService,\n                        {\n                            provide: forms.NG_VALUE_ACCESSOR,\n                            useExisting: core.forwardRef(function () { return NgxWigComponent; }),\n                            multi: true\n                        }\n                    ],\n                    encapsulation: core.ViewEncapsulation.None\n                },] },\n    ];\n    /** @nocollapse */\n    NgxWigComponent.ctorParameters = function () { return [\n        { type: NgxWigToolbarService, },\n    ]; };\n    NgxWigComponent.propDecorators = {\n        \"content\": [{ type: core.Input },],\n        \"placeholder\": [{ type: core.Input },],\n        \"buttons\": [{ type: core.Input },],\n        \"disabled\": [{ type: core.Input },],\n        \"isSourceModeAllowed\": [{ type: core.Input },],\n        \"contentChange\": [{ type: core.Output },],\n        \"ngxWigEditable\": [{ type: core.ViewChild, args: ['ngWigEditable',] },],\n    };\n    return NgxWigComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NgxWigModule = (function () {\n    function NgxWigModule() {\n    }\n    NgxWigModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [\n                        common.CommonModule,\n                        forms.FormsModule,\n                        forms.ReactiveFormsModule\n                    ],\n                    declarations: [\n                        NgxWigComponent,\n                    ],\n                    exports: [\n                        NgxWigComponent,\n                    ],\n                    providers: [NgxWigToolbarService]\n                },] },\n    ];\n    return NgxWigModule;\n}());\n\nexports.NgxWigModule = NgxWigModule;\nexports.NgxWigComponent = NgxWigComponent;\nexports.NgxWigToolbarService = NgxWigToolbarService;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","module.exports = \"\\n\\n.full-width-input {\\n  width: 50%;\\n}\\n\\nmat-card-content{\\n  width:45%;\\n}\\n\\n.w-47{\\n  width:47% !important;\\n}\\n\\n.m-r-25{\\n  margin-right:26px;\\n}\\n\\n.mat-form-field{\\n  width:100%;\\n}\\n\\n.example-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.example-container > * {\\n  width: 97%;\\n  padding: 10px;\\n}\\n\\n.CodeMirror {\\n  min-height: 100px !important;\\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.mat-form-field{\\n  width:100%;\\n}\\n\\n.mat-card{\\n  padding:5px 5px 0px 10px;\\n}\\n\\nmat-radio-group{\\n  float: right;\\n  margin-top: 16px;\\n}\\n\\n.rightbtn{\\n  float: right;\\n  bottom: 7px;\\n}\\n\\ninput.mat-input-element{\\n  width:70%;\\n}\\n\\n/*.next{\\n  float: left;\\n  margin-top: 10px;\\n}*/\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2RhaGJvYXJkcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7RUFDRSxXQUFXO0NBQ1o7O0FBRUQ7RUFDRSxVQUFVO0NBQ1g7O0FBRUQ7RUFDRSxxQkFBcUI7Q0FDdEI7O0FBRUQ7RUFDRSxrQkFBa0I7Q0FDbkI7O0FBRUQ7RUFDRSxXQUFXO0NBQ1o7O0FBRUQ7RUFDRSxjQUFjO0VBQ2QsdUJBQXVCO0NBQ3hCOztBQUVEO0VBQ0UsV0FBVztFQUNYLGNBQWM7Q0FDZjs7QUFDRDtFQUNFLDZCQUE2QjtDQUM5Qjs7QUFFRDtFQUNFLGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsWUFBWTtDQUNiOztBQUVEO0VBQ0UsWUFBWTtDQUNiOztBQUVEO0VBQ0UsV0FBVztDQUNaOztBQUVEO0VBQ0UseUJBQXlCO0NBQzFCOztBQUVEO0VBQ0UsYUFBYTtFQUNiLGlCQUFpQjtDQUNsQjs7QUFFRDtFQUNFLGFBQWE7RUFDYixZQUFZO0NBQ2I7O0FBRUQ7RUFDRSxVQUFVO0NBQ1g7O0FBRUQ7OztHQUdHIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2RhaGJvYXJkcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbi5mdWxsLXdpZHRoLWlucHV0IHtcbiAgd2lkdGg6IDUwJTtcbn1cblxubWF0LWNhcmQtY29udGVudHtcbiAgd2lkdGg6NDUlO1xufVxuXG4udy00N3tcbiAgd2lkdGg6NDclICFpbXBvcnRhbnQ7XG59XG5cbi5tLXItMjV7XG4gIG1hcmdpbi1yaWdodDoyNnB4O1xufVxuXG4ubWF0LWZvcm0tZmllbGR7XG4gIHdpZHRoOjEwMCU7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogOTclO1xuICBwYWRkaW5nOiAxMHB4O1xufVxuLkNvZGVNaXJyb3Ige1xuICBtaW4taGVpZ2h0OiAxMDBweCAhaW1wb3J0YW50O1xufVxuXG4uZXhhbXBsZS1mb3JtIHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1mb3JtLWZpZWxke1xuICB3aWR0aDoxMDAlO1xufVxuXG4ubWF0LWNhcmR7XG4gIHBhZGRpbmc6NXB4IDVweCAwcHggMTBweDtcbn1cblxubWF0LXJhZGlvLWdyb3Vwe1xuICBmbG9hdDogcmlnaHQ7XG4gIG1hcmdpbi10b3A6IDE2cHg7XG59XG5cbi5yaWdodGJ0bntcbiAgZmxvYXQ6IHJpZ2h0O1xuICBib3R0b206IDdweDtcbn1cblxuaW5wdXQubWF0LWlucHV0LWVsZW1lbnR7XG4gIHdpZHRoOjcwJTtcbn1cblxuLyoubmV4dHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59Ki9cbiJdfQ== */\"","module.exports = \"  <div class=\\\"signin-content\\\" *ngIf=\\\"!showForm\\\"  >\\n    <mat-card>\\n        <mat-card-title>\\n          <p>Add Question</p>\\n        </mat-card-title>\\n        <mat-card-content>\\n            <mat-form-field class=\\\"w-47 m-r-25\\\">\\n                <mat-select matTooltip=\\\"Select exam category\\\" placeholder=\\\"Select category\\\" [(ngModel)]=\\\"quiz.skill\\\">\\n                    <mat-option   *ngFor=\\\"let item of categoryList ;let i =index\\\" [value]=\\\"item.id\\\">{{item.title}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"w-47\\\">\\n                <mat-select matTooltip=\\\"Select Difficulty level \\\" placeholder=\\\"Select Difficulty level\\\" [(ngModel)]=\\\"quiz.level\\\">\\n                    <mat-option    value=\\\"easy\\\">easy</mat-option>\\n                    <mat-option    value=\\\"easy\\\">medium</mat-option>\\n                    <mat-option    value=\\\"easy\\\">difficulty</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n\\n\\n\\n            <ngx-wig [content]=\\\"text1\\\" matTooltip=\\\"Enter the question\\\" [(ngModel)]=\\\"quiz.question\\\"></ngx-wig>\\n\\n\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <textarea matInput placeholder=\\\"Add code\\\" matTooltip=\\\"Add source code\\\"  [(ngModel)]=\\\"quiz.code\\\"></textarea>\\n            </mat-form-field>\\n            <button matTooltip=\\\"Add more answer\\\" mat-button color=\\\"primary\\\" (click)=\\\"addAnswer()\\\">\\n                <mat-icon>add</mat-icon>\\n                Add answer</button>\\n                <div *ngFor=\\\"let item of answerlist ;let i =index\\\" class=\\\"animated slideInDown\\\">\\n                    {{i+1 }}  <mat-form-field >\\n                        <input class=\\\"txtbx\\\" matInput placeholder=\\\"Answer\\\" matTooltip=\\\"Enter answer here\\\" [(ngModel)]=\\\"item.answer\\\">\\n                        <mat-radio-group  matTooltip=\\\"select the correct answer\\\" [(ngModel)]=\\\"quiz.correct_answer\\\">\\n                            <mat-radio-button   [value]=\\\"i\\\">Correct answer </mat-radio-button>\\n                        </mat-radio-group>\\n                        <button matTooltip=\\\"Delete this answer\\\" mat-button color=\\\"primary\\\" (click)=\\\"removeAnswer(i)\\\" class=\\\"rightbtn\\\"><mat-icon>delete_forever</mat-icon>\\n                        </button>\\n                    </mat-form-field>\\n                </div>\\n                <button mat-button color=\\\"primary\\\"  (click)=\\\"addQuestion()\\\" class=\\\"next\\\" >\\n                    Next\\n                </button>\\n            </mat-card-content></mat-card></div>\\n\\n\\n\\n            <div class=\\\"signin-content\\\" *ngIf=\\\"showForm\\\">\\n                <mat-card>\\n                    <mat-card-content>\\n                        <p>Add Question</p>\\n                        <input\\n                        style=\\\"display: none\\\"\\n                        type=\\\"file\\\" (change)=\\\"addImage($event)\\\"\\n                        #fileInput>\\n                        <button mat-icon-button (click)=\\\"fileInput.click()\\\">Upload Image\\n                          <mat-icon >cloud_upload</mat-icon>\\n                        </button>\\n\\n                        <img *ngIf=\\\"url!=null\\\" [src]=\\\"url\\\" mat-card-sm-image> <br/>\\n                        <button mat-button color=\\\"primary\\\"  (click)=\\\"goToListing()\\\" >\\n                            Save\\n                        </button>\\n                    </mat-card-content></mat-card></div>\\n\"","import { Component, ViewChild } from '@angular/core';\n\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from 'src/data.service';\nimport { WebservicesService } from '../services/webservices.service';\nimport { fadeAnimation } from '../animations';\n@Component({\n  selector: 'app-dahboardpage',\n  templateUrl: './dahboardpage.component.html',\n  styleUrls: ['./dahboardpage.component.css'],\n  animations: [fadeAnimation]\n})\nexport class DahboardpageComponent {\n  @ViewChild('textEditor')\n\n  name: string;\n  ourFile: File; // hold our file\n  answerlist: any = [{answer: ''}];\n  correct: any;\n  quiz: any = {};\n  options: any = {lineWrapping: true, toolbar: false};\n  showForm: boolean;\n  SelectedColor: string;\n  colors: string[];\n  categoryList: any = [];\n  param1: string;\n  edit: boolean;\n  image: any;\n  url: any;\n  selectedFile: any;\n\n  constructor(private _services: WebservicesService, private router: Router, public msg: DataService, private route: ActivatedRoute\n  ) {\n    this.name = '';\n    this.route.queryParams.subscribe(params => {\n      this.param1 = params['id'];\n      if (this.param1 === undefined) {\n        this.edit = false;\n      } else {\n        this.edit = true;\n        this.getQuestion();\n      }\n    });\n  }\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewInit() {\n    this.getCategory();\n  }\n  getCategory() {\n    this._services.getCategory().subscribe(\n      (response: any) => {\n        const result: any = response.response.data;\n        this.categoryList = result;\n      },\n      error => {}\n    );\n  }\n  addAnswer() {\n    this.answerlist.push({ answer: '' });\n  }\n  removeAnswer(i) {\n    this.answerlist.splice(i, 1);\n  }\n  getQuestion() {\n    const obj = {\n      id: this.param1\n    };\n    this._services.getQuestion(obj).subscribe((response: any) => {\n      const result: any = response.response.data;\n      this.quiz = result;\n      this.answerlist = result.answer;\n      this.url = result.image;\n    });\n  }\n  openInput() {\n    // your can use ElementRef for this later\n    document.getElementById('fileInput').click();\n  }\n  fileChange(files: File[]) {\n    if (files.length > 0) {\n      this.ourFile = files[0];\n    }\n  }\n  onSelectFile(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      this.ourFile = event.target.files[0];\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n      // tslint:disable-next-line:no-shadowed-variable\n      reader.onload = event => {\n        // called once readAsDataURL is completed\n        //  this.url = event.target.result;\n      };\n    }\n  }\n  /**\n   * this is used to perform the actual upload\n   */\n  upload() {\n    this.image = document.getElementById('fileInput');\n  }\n  addQuestion() {\n    if (!this.quiz.skill) {\n      this.msg.openSnackBar('Please select skill');\n      return false;\n    }\n    if (!this.quiz.level) {\n      this.msg.openSnackBar('Please select level');\n      return false;\n    }\n    if (!this.quiz.question) {\n      this.msg.openSnackBar('Please enter question');\n      return false;\n    }\n    this.answerlist.forEach(element => {\n      if (element.answer === '') {\n        this.msg.openSnackBar('Please enter some answer');\n        return false;\n      }\n    });\n    this.quiz.answer = this.answerlist;\n    this.quiz.status = 1;\n    const cond = this.edit ? 'update' : 'add';\n    // const uploadData = new FormData();\n    // if (this.ourFile) {\n    //   uploadData.append('question_file', this.ourFile, this.ourFile.name);\n    //   this.quiz.image_available = true;\n    // } else {\n    //   this.quiz.image_available = false;\n    // }\n    // uploadData.append('param', JSON.stringify(this.quiz));\n    this._services.addQuestion(this.quiz, cond).subscribe(response => {\n      this.quiz = [];\n      this.showForm = true;\n    });\n  }\n  clearCache() {\n    this._services.clearCache();\n  }\n  goToListing() {\n    this.router.navigate(['/question-listing']);\n  }\n\n  addImage(event) {\n    const item = {\n      id: this.param1\n    };\n    const uploadData = new FormData();\n    this.selectedFile = event.target.files;\n    for (let i = 0; i < this.selectedFile.length; i++) {\n      uploadData.append(\n        'question_file',\n        this.selectedFile[i],\n        this.selectedFile[i]['name']\n      );\n    }\n    uploadData.append('param', JSON.stringify(item));\n\n\n    this._services.uploadQuestionImage(uploadData).subscribe(\n      (Response: any) => {\n      },\n      Error => {}\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DahboardpageComponent } from './dahboardpage.component';\nimport { AuthGuardService } from '../auth/auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DahboardpageComponent,\n    canLoad:[AuthGuardService],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NgxWigModule} from 'ngx-wig';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\n\nimport { MaterialModule } from '../material.module';\nimport { FormsModule } from '@angular/forms';\n import { ShareModule } from '../share/share.module';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DahboardpageComponent } from './dahboardpage.component';\n\n\n@NgModule({\n  imports: [ ShareModule,NgxWigModule,\n    CommonModule, MaterialModule, FormsModule, ReactiveFormsModule,\n    DashboardRoutingModule\n  ],\n  declarations: [DahboardpageComponent],\n })\nexport class DashboardModule { }\n"],"sourceRoot":""}
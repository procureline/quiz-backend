{"version":3,"sources":["webpack:///./src/app/questionlisting/questionlisting-routing.module.ts","webpack:///./src/app/questionlisting/questionlisting.component.css","webpack:///./src/app/questionlisting/questionlisting.component.html","webpack:///./src/app/questionlisting/questionlisting.component.ts","webpack:///./src/app/questionlisting/questionlisting.module.ts"],"names":[],"mappings":"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","file":"questionlisting-questionlisting-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { QuestionlistingComponent } from './questionlisting.component';\nimport { AuthGuardService } from '../auth/auth-guard.service';\n\nconst routes: Routes = [{\n  path: '',\n  component: QuestionlistingComponent,\n  canActivate:[AuthGuardService]\n\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class QuestionlistingRoutingModule { }\n","module.exports = \"table {\\n  width: 100%;\\n}\\n\\nmat-select\\n{width: 26%;\\npadding-left:1%;\\n}\\n\\nmat-form-field{\\n  padding: 5px;\\n  width:45%;\\n}\\n\\n.pleft{\\n  padding-left:2%;\\n  padding-right:2%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVlc3Rpb25saXN0aW5nL3F1ZXN0aW9ubGlzdGluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtDQUNiOztBQUVEO0NBQ0MsV0FBVztBQUNaLGdCQUFnQjtDQUNmOztBQUVEO0VBQ0UsYUFBYTtFQUNiLFVBQVU7Q0FDWDs7QUFFRDtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7Q0FDbEIiLCJmaWxlIjoic3JjL2FwcC9xdWVzdGlvbmxpc3RpbmcvcXVlc3Rpb25saXN0aW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5tYXQtc2VsZWN0XG57d2lkdGg6IDI2JTtcbnBhZGRpbmctbGVmdDoxJTtcbn1cblxubWF0LWZvcm0tZmllbGR7XG4gIHBhZGRpbmc6IDVweDtcbiAgd2lkdGg6NDUlO1xufVxuXG4ucGxlZnR7XG4gIHBhZGRpbmctbGVmdDoyJTtcbiAgcGFkZGluZy1yaWdodDoyJTtcbn1cbiJdfQ== */\"","module.exports = \"\\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n    </mat-form-field>\\n    <mat-slide-toggle class=\\\"pleft\\\"matTooltip=\\\"View code\\\" [(ngModel)]=\\\"checked\\\">View</mat-slide-toggle>\\n    Choose category : <mat-select placeholder=\\\"Select category\\\" matTooltip=\\\"Select exam category\\\" [(ngModel)]=\\\"category\\\"  (ngModelChange)=\\\"getQuestion()\\\" >\\n      <mat-option *ngFor=\\\"let item of categoryList ;let i =index\\\" [value]=\\\"item.id\\\"> {{item.title}}</mat-option>\\n    </mat-select>\\n\\n\\n  <table mat-table #table [dataSource]=\\\"QuestionListing\\\" matSort   >\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"position\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\n      <td mat-cell *matCellDef=\\\"let index = index\\\"> {{index+1}} </td>\\n    </ng-container>\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"question\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Question </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [innerHTML]=\\\"element.question|slice:0:50\\\">\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"code\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" >\\n        <pre *ngIf=\\\"checked\\\"  class=\\\"language-java\\\"> {{element.code}}</pre>\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"createdAt\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> CreatedAt </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" >\\n        {{element.createdAt|date}}\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\n      <td mat-cell *matCellDef=\\\"let element;let index = index\\\"  >\\n        <mat-slide-toggle matTooltip=\\\"Active and deactivate question\\\" (change)=\\\"onStatusChange(element)\\\" [(ngModel)]=\\\"element.status\\\">{{(element.status==1)?'Active':'Deactive'}} </mat-slide-toggle>\\n        <button matTooltip=\\\"Edit\\\" mat-button [routerLink]=\\\"['/add-question']\\\" [queryParams]=\\\"{id: element.id}\\\"><mat-icon>edit</mat-icon></button>\\n        <button matTooltip=\\\"Delete\\\" mat-button color=\\\"warn\\\" (click)=\\\"deleteQuestion(element,index)\\\"> <mat-icon>delete_forever</mat-icon></button>\\n      </td>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n\"","import { Component, OnInit,AfterViewInit } from '@angular/core';\nimport { ViewChild} from '@angular/core';\nimport {MatSort, MatTable} from '@angular/material';\nimport { WebservicesService } from '../services/webservices.service';\nimport { Router } from '@angular/router';\n\n\nimport { DataService } from '../../data.service';\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\n\n  \n @Component({\n  selector: 'app-questionlisting',\n  templateUrl: './questionlisting.component.html',\n  styleUrls: ['./questionlisting.component.css']\n})\nexport class QuestionlistingComponent implements  AfterViewInit{\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  displayedColumns: string[] = ['position', 'question', 'code', 'action', 'createdAt'];\n  cssCode: string;\n  checked = false;\n\n\n  category: string;\n  @ViewChild('table') table: MatTable<any>;\n\n  @ViewChild(MatSort) sort: MatSort;\n  QuestionListing: any = [];\n  categoryList: any = [];\n  dataSource: any = [];\n  constructor(private _services: WebservicesService, public msg: DataService, private router: Router, ) {\n\n  }\n  applyFilter(filterValue: string) {\n    this.QuestionListing.filter = filterValue.trim().toLowerCase();\n  }\n  getCategory() {\n    this._services.getCategory().subscribe((response: any) => {\n      const result: any = response.response.data;\n      result.sort((a, b ) => {\n        if (a.title > b.title) {\n          return 1;\n        }\n        return 0;\n\n      });\n\n\n      this.categoryList = result;\n\n      this.category = result[0].id;\n      this.getQuestion();\n    }, (error) => {\n    });\n  }\n  ngAfterViewInit() {\n    this.getCategory();\n\n  }\n\n  getQuestion() {\n    const obj = {\n      skill: this.category\n    };\n    this._services.getQuestionListing(obj).subscribe((response: any) => {\n      const result = response.response.data;\n\n\n      this.QuestionListing =  new MatTableDataSource(result); \n      this.QuestionListing.paginator = this.paginator;\n\n    });\n  }\n\n  deleteQuestion(item, index) {\n\n\n\n    const confirmAlert = confirm('Are you sure want to this item ?');\n    if (confirmAlert === true) {\n      const obj = {\n        id: item.id\n      };\n      this._services.deleteQuestion(obj).subscribe((response: any) => {\n        this.QuestionListing.splice(index, 1);\n        this.table.renderRows();\n\n      });\n\n    }\n  }\n\n  onStatusChange(event) {\n    this._services.updateStatusQuestion(event).subscribe((response: any) => {\n\nconst msg = response.response.message;\nthis.msg.openSnackBar(msg);\n\n    }, (error) => {\n\n\n\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { QuestionlistingRoutingModule } from './questionlisting-routing.module';\nimport { QuestionlistingComponent } from './questionlisting.component';\nimport { MaterialModule } from '../material.module';\nimport { ShareModule } from '../share/share.module';\n\n\n\n@NgModule({\n  imports: [FormsModule,\n    CommonModule, MaterialModule, ShareModule,\n    QuestionlistingRoutingModule\n  ],\n  declarations: [QuestionlistingComponent],\n })\nexport class QuestionlistingModule { }\n"],"sourceRoot":""}